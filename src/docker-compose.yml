version: "3"

networks:
  default:
    #external:
    name: IoTnet

volumes:
  npm-cache:
    external: false

services:
  serviceregistry:
    build: ./service-registry
    container_name: serviceregistry
    volumes:
      - npm-cache:/root/.npm
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - SERVICE_REGISTRY_PORT=${SERVICE_REGISTRY_PORT}
    ports:
      - ${SERVICE_REGISTRY_PORT}:${SERVICE_REGISTRY_PORT}
    depends_on: 
      - redis
  resourcemanager:
    build: ./resource-manager
    container_name: resourcemanager
    volumes:
      - npm-cache:/root/.npm
    environment:
      - SERVICE_REGISTRY_HOST=${SERVICE_REGISTRY_HOST}
      - SERVICE_REGISTRY_PORT=${SERVICE_REGISTRY_PORT}
      - RESOURCE_MANAGER_PORT=${RESOURCE_MANAGER_PORT}
    ports:
      - ${RESOURCE_MANAGER_PORT}:${RESOURCE_MANAGER_PORT}
    depends_on:
      - serviceregistry
  datamanager:
    build: ./data-manager
    container_name: datamanager
    volumes:
      - npm-cache:/root/.npm
    environment:
      - SERVICE_REGISTRY_HOST=${SERVICE_REGISTRY_HOST}
      - SERVICE_REGISTRY_PORT=${SERVICE_REGISTRY_PORT}
      - DATA_MANAGER_PORT=${DATA_MANAGER_PORT}
      - MQTT_HOST=${MQTT_HOST}
      - MQTT_PORT=${MQTT_PORT}
      - RABBITMQ_SUBSCRIBER_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_SUBSCRIBER_PASSWORD=${RABBITMQ_DEFAULT_PASS}
    ports:
      - ${DATA_MANAGER_PORT}:${DATA_MANAGER_PORT}
    depends_on:
      - serviceregistry
      - rabbitmq
  actionmanager:
    build: ./action-manager
    container_name: actionmanager
    volumes:
      - npm-cache:/root/.npm
    environment:
      - SERVICE_REGISTRY_HOST=${SERVICE_REGISTRY_HOST}
      - SERVICE_REGISTRY_PORT=${SERVICE_REGISTRY_PORT}
      - ACTION_MANAGER_PORT=${ACTION_MANAGER_PORT}
      - MQTT_HOST=${MQTT_HOST}
      - MQTT_PORT=${MQTT_PORT}
      - RABBITMQ_PUBLISHER_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PUBLISHER_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_SUBSCRIBER_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_SUBSCRIBER_PASSWORD=${RABBITMQ_DEFAULT_PASS}
    ports:
      - ${ACTION_MANAGER_PORT}:${ACTION_MANAGER_PORT}
    depends_on:
      - serviceregistry
      - rabbitmq
  servicecataloger:
    build: ./service-cataloger
    container_name: servicecataloger
    volumes:
      - ./service-cataloger:/usr/service-cataloger
      - npm-cache:/root/.npm
    environment:
      - SERVICE_REGISTRY_HOST=${SERVICE_REGISTRY_HOST}
      - SERVICE_REGISTRY_PORT=${SERVICE_REGISTRY_PORT}
      - SERVICE_CATALOGER_PORT=${SERVICE_CATALOGER_PORT}
    ports:
      - ${SERVICE_CATALOGER_PORT}:${SERVICE_CATALOGER_PORT}
    depends_on:
      - serviceregistry
  inputcommunicator:
    build: ./input-communicator
    container_name: inputcommunicator
    volumes:
      - ./input-communicator:/usr/input-communicator
      - npm-cache:/root/.npm
    environment:
      - SERVICE_REGISTRY_HOST=${SERVICE_REGISTRY_HOST}
      - SERVICE_REGISTRY_PORT=${SERVICE_REGISTRY_PORT}
      - INPUT_COMMUNICATOR_PORT=${INPUT_COMMUNICATOR_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - MQTT_HOST=${MQTT_HOST}
      - MQTT_PORT=${MQTT_PORT}
      - AMQP_HOST=${AMQP_HOST}
      - AMQP_PORT=${AMQP_PORT}
      - RABBITMQ_PUBLISHER_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PUBLISHER_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_SUBSCRIBER_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_SUBSCRIBER_PASSWORD=${RABBITMQ_DEFAULT_PASS}
    ports:
      - ${INPUT_COMMUNICATOR_PORT}:${INPUT_COMMUNICATOR_PORT}
      - 5683:5683/udp
    depends_on:
      - serviceregistry
      - redis
      - rabbitmq
  actioncommunicator:
    build: ./action-communicator
    container_name: actioncommunicator
    volumes:
      - npm-cache:/root/.npm
    environment:
      - SERVICE_REGISTRY_HOST=${SERVICE_REGISTRY_HOST}
      - SERVICE_REGISTRY_PORT=${SERVICE_REGISTRY_PORT}
      - ACTION_COMMUNICATOR_PORT=${ACTION_COMMUNICATOR_PORT}
      - MQTT_HOST=${MQTT_HOST}
      - MQTT_PORT=${MQTT_PORT}
      - AMQP_HOST=${AMQP_HOST}
      - AMQP_PORT=${AMQP_PORT}
      - RABBITMQ_PUBLISHER_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PUBLISHER_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_SUBSCRIBER_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_SUBSCRIBER_PASSWORD=${RABBITMQ_DEFAULT_PASS}
    ports:
      - ${ACTION_COMMUNICATOR_PORT}:${ACTION_COMMUNICATOR_PORT}
    depends_on:
      - serviceregistry
      - rabbitmq
  rabbitmq:
    build: ./rabbitmq
    container_name: rabbitmq
    volumes:
      - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
      - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
    environment:
      - RABBITMQ_PID_FILE=/var/lib/rabbitmq/mnesia/rabbitmq
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
    ports:
      - 5672:5672
      - 15672:15672
      - 1883:1883
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - PORT=8082
      - REDIS_HOSTS=local:${REDIS_HOST}:${REDIS_PORT}
    ports:
      - "8082:8082"
    depends_on: 
      - redis
  # node-red:
  #   image: nodered/node-red:latest
  #   ports:
  #     - 1880:1880
  # mongo:
  #   image: mongo
  #   container_name: mongo
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
  #     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASS}
  #   ports:
  #     - ${MONGO_PORT}:${MONGO_PORT}
  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   depends_on:
  #     - mongo
  #   environment:
  #     - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER}
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASS}
  #     - VCAP_APP_HOST=${MONGO_EXPRESS_HOST}
  #     - VCAP_APP_PORT=${MONGO_EXPRESS_PORT}
  #   ports:
  #     - ${MONGO_EXPRESS_PORT}:${MONGO_EXPRESS_PORT}
  #   depends_on:
  #     - mongo